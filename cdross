#!/bin/bash
show_help() {
	printf "\33[0;31m This is very early work script use at your own risk\033[0m\n"
	echo "Usage: cdross [command] [args]"
	echo " -i, --init <distro> <packages>		generate container file."
	echo " -r, --run				start running cdross."
	echo " -h, --help				show this message."
	echo
}

cdross_init() {
	printf "\033[0;36m # Select distro to be used:"
	select_disto
	printf "\033[0;36m # Set the username for container: \033[0m\n"
	set_packages
	printf "\033[0;36m # Set packages to be added to container image: \033[0m\n"
	set_user
	printf "\033[0;36m # Sourcing variables \033[0m\n"
	source_shell
	printf "\033[0;32m # Container file created successfully \033[0m\n"
}

cdross_run() {
	printf "\033[0;34m starting cdross container \033[0m\n"
	# in futures releases direct acess will not be permitted
	docker run  --name cdross --rm -it -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=$DISPLAY \
	-e WAYLAND_DISPLAY=$WAYLAND_DISPLAY --device=/dev/dri/card0:/dev/dri/card0 \
	cdross 
	#--device=/dev/dri/renderD128:/dev/dri/renderD128 

}

cdross_exec() {
	 #sudo docker exec --user cross -it cdross bash -c source /opt/ros/foxy/setup.sh && ros2
	app="gazebo"
	docker exec -it cdross $app 
}

select_disto() {
	if [[ -e current/Dockerfile ]]; then
		rm current/Dockerfile
	fi
	distros=("melodic" "noetic" "foxy")
	read selected_distro
	if   [[ ! " ${distros[*]} " =~ " ${selected_distro} " ]]; then
		printf "\033[0;31m ERROR:\033[0m distro not found\n"
		exit 1
	fi
	for d in "${!distros[@]}"; do
		if [ ${distros[$d]} == $selected_distro ]; then
			echo "FROM ros:${distros[$d]}-ros-base" >> current/Dockerfile
			distro=$d
			if ! [ "2" -gt "$d" ]; then
				ros_version=2
			fi
			break
		fi
	done
}

set_packages () {
	echo "RUN apt update && apt install libgl1-mesa-glx libgl1-mesa-dri \\" >> current/Dockerfile
	echo "currently these are the only options:"
	echo " gazebo rviz "
	#TODO: add more packages (demos)
	read pack
	if  [ -z "$pack" ]; then
		echo "No package specified, base install will "
	fi
	if [[ " ${pack[*]} " =~ " gazebo " ]]; then
		packages="ros-${distros[$distro]}-gazebo-ros-pkgs"
		echo "	$packages \\" >> current/Dockerfile
	fi
	if [[ " ${pack[*]} " =~ " rviz " ]]; then
		aux_packages="$packages ros-${distros[$distro]}-rviz${ros_version}"
		echo "	$aux_packages \\" >> current/Dockerfile
	fi
	echo "	sudo" >>  current/Dockerfile
	# This will me installed with packages built from source
}

set_user() {
	# Set a username to be used by cdross in container.
	echo "Which username should container use?"
	read username
	if  [ -z "$username" ]; then
		username="cdross"
		echo "cdross name will be used instead"
	fi
	echo 'RUN useradd --create-home --home-dir /home/cdross-dir --shell /bin/bash --user-group --groups sudo '"$username"' && \
	echo '"$username:$username"' | chpasswd && \
	echo "'"$username"' ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers' >> current/Dockerfile
}
source_shell () {
	echo 'RUN echo "source /opt/ros/'"${distros[$distro]}"'/setup.sh" >> /home/cdross-dir/.bashrc' >> current/Dockerfile
}

case $1 in
	'init')
		cdross_init
	;;
	'run')
		cdross_run
	;;
	'exec')
		cdross_exec
	;;
	'help' | *)
		show_help
	;;
esac
